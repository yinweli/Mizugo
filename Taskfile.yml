version: "3"

tasks:
  # 程式碼格式化
  lint:
    cmds:
      - task: fmt-mizugo
      - task: fmt-client-unity
      - task: fmt-client-unity-sample
      - task: fmt-proto-mizugo
      - task: fmt-proto-test
      - task: fmt-yaml
      - task: lint-mizugo

  fmt-mizugo:
    ignore_error: true
    cmds:
      - gofmt -s -w -l .

  fmt-client-unity:
    ignore_error: true
    dir: support/client-unity/Packages/com.fouridstudio.mizugo-client-unity
    cmds:
      - csharpier format .

  fmt-client-unity-sample:
    ignore_error: true
    dir: support/test-client-cs/Assets/Scripts
    cmds:
      - csharpier format .

  fmt-proto-mizugo:
    ignore_error: true
    dir: support/proto-mizugo
    cmds:
      - buf format -w .
      - csharpier format .

  fmt-proto-test:
    ignore_error: true
    dir: support/proto-test
    cmds:
      - buf format -w .
      - csharpier format .

  fmt-yaml:
    ignore_error: true
    cmds:
      - npx prettier --write "*.yaml" "*.yml" "**/*.yaml" "**/*.yml" --end-of-line lf

  lint-mizugo:
    ignore_error: true
    cmds:
      - golangci-lint run --color always

  # 單元測試
  test:
    cmds:
      - go test ./... -cover

  # 效能測試
  bench:
    cmds:
      - go test ./... -bench=. -benchmem

  # 更新訊息
  proto:
    cmds:
      - task: proto-mizugo
      - task: proto-test

  proto-mizugo:
    dir: support\proto\mizugo
    cmds:
      - cmd /C build.bat

  proto-test:
    dir: support\proto\test
    cmds:
      - cmd /C build.bat

  # 更新子專案分支
  subtree:
    cmds:
      - git subtree split --prefix support/client-unity/Packages/com.fouridstudio.mizugo-proto-unity --branch proto-unity
      - git subtree split --prefix support/client-unity/Packages/com.fouridstudio.mizugo-client-unity --branch client-unity
      - git subtree split --prefix support/test-client-cs --branch client-unity-sample

  # 停止容器
  stop:
    cmds:
      - docker stop $(docker ps -q)

  # 啟動資料庫
  db:
    cmds:
      # 檢查網路是否存在, 不然就建立它
      - |
        if ! docker network ls | grep -qw dev; then
          docker network create dev
        fi
      # 啟動redis
      - docker build -t dbredis -f script/docker-redis .
      - docker rm -f -v dbredis || true
      - docker volume rm dbredis-volume || true
      - docker run -d --name dbredis --network dev -v dbredis-volume:/data -p 6379:6379 dbredis redis-server /usr/local/etc/redis/redis.conf
      # 啟動mongo
      - docker build -t dbmongo -f script/docker-mongo .
      - docker rm -f -v dbmongo || true
      - docker volume rm dbmongo-volume || true
      - docker run -d --name dbmongo --network dev -v dbmongo-volume:/data/db -p 27017:27017 dbmongo
      # 清除懸空鏡像
      - docker image prune -f

  # 安裝工具
  install:
    ignore_error: true
    cmds:
      - dotnet tool install csharpier -g # 安裝cs格式化工具
      - go install github.com/bufbuild/buf/cmd/buf@latest # 安裝proto格式化工具
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest # 安裝lint
      - go install golang.org/x/tools/cmd/goimports@latest # 安裝go引入排序工具
      - npm install -g prettier # 安裝yaml格式化工具
